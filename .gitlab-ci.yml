image: rust:latest

stages:
  - build
  - test

variables:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  FF_USE_FASTZIP: "true"
  ARTIFACT_COMPRESSION_LEVEL: "fast"
  GIT_DEPTH: 1

default:
  interruptible: true
  retry:
    max: 2
    when:
      - runner_system_failure

before_script:
  - rustup default stable
  - rustup target add wasm32-unknown-unknown
  - apt-get update && apt-get install -y build-essential
  - cargo install ic-wasm
  - wget https://github.com/dfinity/pocketic/releases/download/8.0.0/pocket-ic-x86_64-linux.gz
  - gunzip pocket-ic-x86_64-linux.gz
  - chmod +x pocket-ic-x86_64-linux
  - mv pocket-ic-x86_64-linux /usr/local/bin/pocket-ic

.test_template: &test_template
  stage: test
  variables:
    POCKET_IC_BIN: /usr/local/bin/pocket-ic
  needs: ["build"]
  resource_group: test
  parallel: 2

build:
  stage: build
  script:
    - bash ./scripts/build_all.sh
  artifacts:
    paths:
      - target/
    expire_in: 1 week
  resource_group: build

test_icrc3:
  <<: *test_template
  script:
    - cargo test --package integrations_tests --test test_icrc3 -- --test-threads=1

test_icrc7:
  <<: *test_template
  script:
    - cargo test --package integrations_tests --test test_icrc7 -- --test-threads=1

test_icrc37:
  <<: *test_template
  script:
    - cargo test --package integrations_tests --test test_icrc37 -- --test-threads=1

test_management:
  <<: *test_template
  script:
    - cargo test --package integrations_tests --test test_management -- --test-threads=1 