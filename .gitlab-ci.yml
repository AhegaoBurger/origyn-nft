image: debian:bullseye

stages:
  - build
  - test

variables:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  FF_USE_FASTZIP: "true"
  ARTIFACT_COMPRESSION_LEVEL: "fast"
  GIT_DEPTH: 1
  CARGO_HOME: ${CI_PROJECT_DIR}/.cargo
  PATH: "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:${CI_PROJECT_DIR}/.cargo/bin"

cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .cargo/
    - target/
    - ~/.cargo/bin/
    - ~/.cargo/registry/index/
    - ~/.cargo/registry/cache/
    - ~/.cargo/git/db/

default:
  interruptible: true
  retry:
    max: 2
    when:
      - runner_system_failure

before_script:
  - apt-get update
  - apt-get install -y curl build-essential ca-certificates git wget
  - curl https://sh.rustup.rs -sSf | sh -s -- -y
  - export PATH="$HOME/.cargo/bin:$PATH"
  - rustup default stable
  - rustup target add wasm32-unknown-unknown
  - cargo install candid-extractor

build:
  stage: build
  script:
    - cargo install ic-wasm
    - export PATH="$PATH:$HOME/.cargo/bin"
    - wget https://github.com/dfinity/pocketic/releases/download/8.0.0/pocket-ic-x86_64-linux.gz
    - gunzip pocket-ic-x86_64-linux.gz
    - chmod +x pocket-ic-x86_64-linux
    - mv pocket-ic-x86_64-linux /usr/local/bin/pocket-ic
    - bash ./scripts/build_all.sh
  artifacts:
    paths:
      - target/
      - .cargo/
      - /usr/local/bin/pocket-ic
    expire_in: 1 week
  resource_group: build

test:
  stage: test
  variables:
    POCKET_IC_BIN: /usr/local/bin/pocket-ic
  needs: ["build"]
  resource_group: test
  script:
    - bash ./scripts/run_integrations_tests.sh
  timeout: 30m 